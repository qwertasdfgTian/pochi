<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lt.mapper.ShopProductMapper">
  <resultMap id="BaseResultMap" type="com.lt.pojo.ShopProduct">
    <!--@mbg.generated-->
    <!--@Table shop_product-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="sub_title" jdbcType="VARCHAR" property="subTitle" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="sale" jdbcType="INTEGER" property="sale" />
    <result column="comment_num" jdbcType="INTEGER" property="commentNum" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="low_stock" jdbcType="INTEGER" property="lowStock" />
    <result column="point" jdbcType="DECIMAL" property="point" />
    <result column="album_pics" jdbcType="VARCHAR" property="albumPics" />
    <result column="product_comment" jdbcType="VARCHAR" property="productComment" />
    <result column="product_content" jdbcType="LONGVARCHAR" property="productContent" />
    <result column="category_id" jdbcType="BIGINT" property="categoryId" />
    <result column="pack_code" jdbcType="BIGINT" property="packCode" />
    <result column="brand_id" jdbcType="BIGINT" property="brandId" />
    <result column="brand_name" jdbcType="VARCHAR" property="brandName" />
    <result column="trans_fee" jdbcType="DECIMAL" property="transFee" />
    <result column="specs" jdbcType="VARCHAR" property="specs" />
    <result column="publish_status" jdbcType="INTEGER" property="publishStatus" />
    <result column="new_status" jdbcType="INTEGER" property="newStatus" />
    <result column="recommend_status" jdbcType="INTEGER" property="recommendStatus" />
    <result column="verify_status" jdbcType="INTEGER" property="verifyStatus" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="promotion_price" jdbcType="DECIMAL" property="promotionPrice" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, pic, sub_title, price, sale, comment_num, stock, low_stock, point, album_pics, 
    product_comment, product_content, category_id, pack_code, brand_id, brand_name, trans_fee, 
    specs, publish_status, new_status, recommend_status, verify_status, sort, promotion_price, 
    create_time, update_time, deleted, create_by, update_by
  </sql>
  
  <select id="getByPageHasNotPack" resultType="com.lt.pojo.ShopProduct">
        select
        p.id,
        p.name,
        p.pic,
        p.price,
        p.sale,
        p.comment_num,
        p.stock,
        p.low_stock,
        p.point,
        p.album_pics,
        p.category_id,
        p.brand_id,
        p.brand_name,
        p.trans_fee,
        p.specs,
        p.publish_status,
        p.new_status,
        p.recommend_status,
        p.sort,
        p.create_time,
        p.update_time,
        p.create_by,
        p.update_by
        from shop_product as p
        where p.deleted = 0
        and not exists(
        select 1 from shop_product_pack as spp
        where p.id = spp.product_id
        )
        <if test="params.name!=null and params.name!=''">
            and p.name like concat('%', #{params.name},'%')
        </if>
        <if test="params.createBy!=null and params.createBy!=''">
            and p.create_by = #{params.createBy}
        </if>
        <if test="params.publishStatus!=null and params.publishStatus!=''">
            and p.publish_status = #{params.publishStatus}
        </if>
        <if test="params.newStatus!=null and params.newStatus!=''">
            and p.new_status = #{params.newStatus}
        </if>
        <if test="params.recommendStatus!=null and params.recommendStatus!=''">
            and p.recommend_status = #{params.recommendStatus}
        </if>
        <if test="params.brandId!=null and params.brandId!=''">
            and p.brand_id = #{params.brandId}
        </if>
        order by p.sort
        limit #{index}, #{pageSize}
    </select>
    <select id="countByPageHasNotPack" resultType="java.lang.Integer">
        select
        count(*)
        from shop_product as p
        where p.deleted = 0
        and not exists(
        select 1 from shop_product_pack as spp
        where p.id = spp.product_id
        )
        <if test="params.name!=null and params.name!=''">
            and p.name like concat('%', #{params.name},'%')
        </if>
        <if test="params.createBy!=null and params.createBy!=''">
            and p.create_by = #{params.createBy}
        </if>
        <if test="params.publishStatus!=null and params.publishStatus!=''">
            and p.publish_status = #{params.publishStatus}
        </if>
        <if test="params.newStatus!=null and params.newStatus!=''">
            and p.new_status = #{params.newStatus}
        </if>
        <if test="params.recommendStatus!=null and params.recommendStatus!=''">
            and p.recommend_status = #{params.recommendStatus}
        </if>
        <if test="params.brandId!=null and params.brandId!=''">
            and p.brand_id = #{params.brandId}
        </if>
    </select>

    <select id="getNewProduct" resultMap="BaseResultMap">
        select id,
               name,
               price,
               pic
        from shop_product
        where deleted = 0
          and new_status = 1
          and stock > 0
        order by rand()
        limit 10
    </select>

    <select id="getRecommendList" resultMap="BaseResultMap">
        select id,
               name,
               price,
               pic
        from shop_product
        where deleted = 0
          and recommend_status = 1
          and stock > 0
        order by rand()
        limit 20
    </select>

    <select id="getRankByCategory" resultMap="BaseResultMap">
        select id,
               name,
               price,
               pic
        from shop_product
        where deleted = 0
          and category_id = #{categoryId}
        order by sale
        limit 6
    </select>
</mapper>